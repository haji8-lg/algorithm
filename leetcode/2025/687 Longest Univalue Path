# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestUnivaluePath(self, root: Optional[TreeNode]) -> int:

        self.max_same_value = 0
        def getLongestPath(value, node):
            if node is None:
                return 0
            resultLeft = getLongestPath(node.val, node.left)
            resultRight =  getLongestPath(node.val, node.right)
            self.max_same_value = max(self.max_same_value, resultLeft + resultRight)
            
            if node.val == value:
                return max(resultLeft, resultRight)+1
            return 0

        getLongestPath(0, root)
        return self.max_same_value
        
